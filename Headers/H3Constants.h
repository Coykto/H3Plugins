//////////////////////////////////////////////////////////////////////
//                                                                  //
//                  Created by RoseKavalier:                        //
//                  rosekavalierhc@gmail.com                        //
//                                                                  //
//          ***You may use or distribute these files freely         //
//             so long as this notice remains present.***           //
//                                                                  //
//          In preparing these files, several sources were          //
//            consulted, they are listed in no particular           //
//                          order below.                            //
//                                                                  //
//  Source: https://github.com/potmdehex/homm3tools                 //
//  Author: potmdehex and contributors                              //
//                                                                  //
//  Source: https://github.com/redxu/HoMM3_FA                       //
//  Author: redxu                                                   //
//                                                                  //
//  Source: https://github.com/openhomm/openhomm                    //
//  Author: Ershov Stanislav, Fomin Roman, Akulich Alexander        //
//                                                                  //
//  Source: https://github.com/GrayFace/wog                         //
//  Author: GrayFace and WoG team                                   //
//                                                                  //
//  Source: https://github.com/ethernidee/era                       //
//  Author: Berserker                                               //
//                                                                  //
//  Source: https://github.com/ethernidee/era-editor                //
//  Author: Grayface and Berserker                                  //
//                                                                  //
//  Source: http://wforum.heroes35.net/showthread.php?tid=3900      //
//  Author: Slava and GrayFace                                      //
//                                                                  //
//  Source: http://wforum.heroes35.net/showthread.php?tid=4583      //
//  Author: gamecreator                                             //
//                                                                  //
//  Thanks: patcher_x86 by baratorch and code therein               //
//                                                                  //
//////////////////////////////////////////////////////////////////////

#ifndef _H3CONSTANTS_H_
#define _H3CONSTANTS_H_

#pragma once

#pragma warning(push)
#pragma warning(disable:4146) // disable unary minus operator unsigned type warning

namespace NH3Creatures
{
	enum eCreatures
	{
		PIKEMAN,
		HALBERDIER,
		ARCHER,
		MARKSMAN,
		GRIFFIN,
		ROYAL_GRIFFIN,
		SWORDSMAN,
		CRUSADER,
		MONK,
		ZEALOT,
		CAVALIER,
		CHAMPION,
		ANGEL,
		ARCHANGEL,
		CENTAUR,
		CENTAUR_CAPTAIN,
		DWARF,
		BATTLE_DWARF,
		WOOD_ELF,
		GRAND_ELF,
		PEGASUS,
		SILVER_PEGASUS,
		DENDROID_GUARD,
		DENDROID_SOLDIER,
		UNICORN,
		WAR_UNICORN,
		GREEN_DRAGON,
		GOLD_DRAGON,
		GREMLIN,
		MASTER_GREMLIN,
		STONE_GARGOYLE,
		OBSIDIAN_GARGOYLE,
		STONE_GOLEM,
		IRON_GOLEM,
		MAGE,
		ARCH_MAGE,
		GENIE,
		MASTER_GENIE,
		NAGA,
		NAGA_QUEEN,
		GIANT,
		TITAN,
		IMP,
		FAMILIAR,
		GOG,
		MAGOG,
		HELL_HOUND,
		CERBERUS,
		DEMON,
		HORNED_DEMON,
		PIT_FIEND,
		PIT_LORD,
		EFREETI,
		EFREET_SULTAN,
		DEVIL,
		ARCH_DEVIL,
		SKELETON,
		SKELETON_WARRIOR,
		WALKING_DEAD,
		ZOMBIE,
		WIGHT,
		WRAITH,
		VAMPIRE,
		VAMPIRE_LORD,
		LICH,
		POWER_LICH,
		BLACK_KNIGHT,
		DREAD_KNIGHT,
		BONE_DRAGON,
		GHOST_DRAGON,
		TROGLODYTE,
		INFERNAL_TROGLODYTE,
		HARPY,
		HARPY_HAG,
		BEHOLDER,
		EVIL_EYE,
		MEDUSA,
		MEDUSA_QUEEN,
		MINOTAUR,
		MINOTAUR_KING,
		MANTICORE,
		SCORPICORE,
		RED_DRAGON,
		BLACK_DRAGON,
		GOBLIN,
		HOBGOBLIN,
		WOLF_RIDER,
		WOLF_RAIDER,
		ORC,
		ORC_CHIEFTAIN,
		OGRE,
		OGRE_MAGE,
		ROC,
		THUNDERBIRD,
		CYCLOPS,
		CYCLOPS_KING,
		BEHEMOTH,
		ANCIENT_BEHEMOTH,
		GNOLL,
		GNOLL_MARAUDER,
		LIZARDMAN,
		LIZARD_WARRIOR,
		GORGON,
		MIGHTY_GORGON,
		SERPENT_FLY,
		DRAGON_FLY,
		BASILISK,
		GREATER_BASILISK,
		WYVERN,
		WYVERN_MONARCH,
		HYDRA,
		CHAOS_HYDRA,
		AIR_ELEMENTAL,
		EARTH_ELEMENTAL,
		FIRE_ELEMENTAL,
		WATER_ELEMENTAL,
		GOLD_GOLEM,
		DIAMOND_GOLEM,
		PIXIE,
		SPRITE,
		PSYCHIC_ELEMENTAL,
		MAGIC_ELEMENTAL,
		NOT_USED1,
		ICE_ELEMENTAL,
		NOT_USED2,
		MAGMA_ELEMENTAL,
		NOT_USED3,
		STORM_ELEMENTAL,
		NOT_USED4,
		ENERGY_ELEMENTAL,
		FIREBIRD,
		PHOENIX,
		AZURE_DRAGON,
		CRYSTAL_DRAGON,
		FAERIE_DRAGON,
		RUST_DRAGON,
		ENCHANTER,
		SHARPSHOOTER,
		HALFLING,
		PEASANT,
		BOAR,
		MUMMY,
		NOMAD,
		ROGUE,
		TROLL,
		CATAPULT,
		BALLISTA,
		FIRST_AID_TENT,
		AMMO_CART,
		ARROW_TOWER,
		CANNON,
		SEA_DOG,
		HOTA_UNUSED,
		NYMPH,
		OCEANIDS,
		CREW_MATE,
		SEA_MAN,
		PIRATE,
		CORSAIR,
		STORMBIRD,
		AYSSID,
		SEA_WITCH,
		SORCERESS,
		NIX,
		NIX_WARRIOR,
		SEA_SERPENT,
		HASPID,
		SATYR,
		FANGARM
	};
}

namespace NH3Dispositions
{
	enum eDisposition
	{
		COMPLIANT,
		FRIENDLY,
		AGGRESSIVE,
		HOSTILE,
		SAVAGE
	};
}

namespace NH3Formats
{
	enum eFormat
	{
		ROE = 0x0E,
		AB = 0x15,
		SOD = 0x1C,
		CHR = 0x1D,
		WOG = 0x33
	};
}

namespace NH3Heroes
{
	enum eHeroClass
	{
		KNIGHT,
		CLERIC,
		RANGER,
		DRUID,
		ALCHEMIST,
		WIZARD,
		DEMONIAC,
		HERETIC,
		DEATH_KNIGHT,
		NECROMANCER,
		OVERLORD,
		WARLOCK,
		BARBARIAN,
		BATTLE_MAGE,
		BEASTMASTER,
		WITCH,
		PLANESWALKER,
		ELEMENTALIST
	};

	enum eHeroes
	{
		/* Knight (Castle) */
		ORRIN,
		VALESKA,
		EDRIC,
		SYLVIA,
		LORD_HAART,
		SORSHA,
		CHRISTIAN,
		TYRIS,

		/* Cleric (Castle) */
		RION,
		ADELA,
		CUTHBERT,
		ADELAIDE,
		INGHAM,
		SANYA,
		LOYNIS,
		CAITLIN,

		/* Ranger (Rampart) */
		MEPHALA,
		UFRETIN,
		JENOVA,
		RYLAND,
		THORGRIM,
		IVOR,
		CLANCY,
		KYRRE,

		/* Druid (Rampart) */
		CORONIUS,
		ULAND,
		ELLESHAR,
		GEM,
		MALCOM,
		MELODIA,
		ALAGAR,
		AERIS,

		/* Alchemist (Tower) */
		PIQUEDRAM,
		THANE,
		JOSEPHINE,
		NEELA,
		TOROSAR,
		FAFNER,
		RISSA,
		IONA,

		/* Wizard (Tower) */
		ASTRAL,
		HALON,
		SERENA,
		DAREMYTH,
		THEODORUS,
		SOLMYR,
		CYRA,
		AINE,

		/* Demoniac (Inferno) */
		FIONA,
		RASHKA,
		MARIUS,
		IGNATIUS,
		OCTAVIA,
		CALH,
		PYRE,
		NYMUS,

		/* Heretic (Inferno) */
		AYDEN,
		XYRON,
		AXSIS,
		OLEMA,
		CALID,
		ASH,
		ZYDAR,
		XARFAX,

		/* Death Knight (Necropolis) */
		STRAKER,
		VOKIAL,
		MOANDOR,
		CHARNA,
		TAMIKA,
		ISRA,
		CLAVIUS,
		GALTHRAN,

		/* Necromancer (Necropolis) */
		SEPTIENNA,
		AISLINN,
		SANDRO,
		NIMBUS,
		THANT,
		XSI,
		VIDOMINA,
		NAGASH,

		/* Overlord (Dungeon) */
		LORELEI,
		ARLACH,
		DACE,
		AJIT,
		DAMACON,
		GUNNAR,
		SYNCA,
		SHAKTI,

		/* Warlock (Dungeon) */
		ALAMAR,
		JAEGAR,
		MALEKITH,
		JEDDITE,
		GEON,
		DEEMER,
		SEPHINROTH,
		DARKSTORN,

		/* Barbarian (Stronghold) */
		YOG,
		GURNISSON,
		JABARKAS,
		SHIVA,
		GRETCHIN,
		KRELLION,
		CRAG_HACK,
		TYRAXOR,

		/* Battle Mage (Stronghold) */
		GIRD,
		VEY,
		DESSA,
		TEREK,
		ZUBIN,
		GUNDULA,
		ORIS,
		SAURUG,

		/* Beastmaster (Fortress) */
		BRON,
		DRAKON,
		WYSTAN,
		TAZAR,
		ALKIN,
		KORBAC,
		GERWULF,
		BROGHILD,

		/* Witch (Fortress) */
		MIRLANDA,
		ROSIC,
		VOY,
		VERDISH,
		MERIST,
		STYG,
		ANDRA,
		TIVA,

		/* Planeswalker (Conflux) */
		PASIS,
		THUNAR,
		IGNISSA,
		LACUS,
		MONERE,
		ERDAMON,
		FIUR,
		KALT,

		/* Elementalist (Conflux) */
		LUNA,
		BRISSA,
		CIELE,
		LABETHA,
		INTEUS,
		AENAIN,
		GELARE,
		GRINDAN,

		/* Special  (Campaign) */
		SIR_MULLICH,
		ADRIENNE,
		CATHERINE,
		DRACON,
		GELU,
		KILGOR,
		LORD_HAART2,
		MUTARE,
		ROLAND,
		MUTARE_DRAKE,
		BORAGUS,
		XERON,

		/* HotA*/
		BIDLEY,
		CORKES,
		JEREMY,
		ILLOR,
		ASTRA,
		DEREK,
		LEENA,
		TARK,
		EOVACIUS,
		SPINT,
		ANDAL,
		MANFRED,
		ZILARE,
		CASMETRA,
		ANABEL,
		DARGEM,
		CASSIOPEIA,
		MIRIAM,
		ELMOR,
		BEATRICE,
		KINKERIA,
		RANLU
	};
}

namespace NH3Levels
{
	enum eLevel
	{
		LEVEL_0 = -2147483648,
		LEVEL_1 = 0,
		LEVEL_2 = 1000,
		LEVEL_3 = 2000,
		LEVEL_4 = 3200,
		LEVEL_5 = 4600,
		LEVEL_6 = 6200,
		LEVEL_7 = 8000,
		LEVEL_8 = 10000,
		LEVEL_9 = 12200,
		LEVEL_10 = 14700,
		LEVEL_11 = 17500,
		LEVEL_12 = 20600,
		LEVEL_13 = 24320,
		LEVEL_14 = 28784,
		LEVEL_15 = 34140,
		LEVEL_16 = 40567,
		LEVEL_17 = 48279,
		LEVEL_18 = 57533,
		LEVEL_19 = 68637,
		LEVEL_20 = 81961,
		LEVEL_21 = 97949,
		LEVEL_22 = 117134,
		LEVEL_23 = 140156,
		LEVEL_24 = 167782,
		LEVEL_25 = 200933,
		LEVEL_26 = 240714,
		LEVEL_27 = 288451,
		LEVEL_28 = 345735,
		LEVEL_29 = 414475,
		LEVEL_30 = 496963,
		LEVEL_31 = 595948,
		LEVEL_32 = 714730,
		LEVEL_33 = 857268,
		LEVEL_34 = 1028313,
		LEVEL_35 = 1233567,
		LEVEL_36 = 1479871,
		LEVEL_37 = 1775435,
		LEVEL_38 = 2130111,
		LEVEL_39 = 2555722,
		LEVEL_40 = 3066455,
		LEVEL_41 = 3679334,
		LEVEL_42 = 4414788,
		LEVEL_43 = 5297332,
		LEVEL_44 = 6356384,
		LEVEL_45 = 7627246,
		LEVEL_46 = 9152280,
		LEVEL_47 = 10982320,
		LEVEL_48 = 13178368,
		LEVEL_49 = 15813625,
		LEVEL_50 = 18975933,
		LEVEL_51 = 22770702,
		LEVEL_52 = 27324424,
		LEVEL_53 = 32788890,
		LEVEL_54 = 39346249,
		LEVEL_55 = 47215079,
		LEVEL_56 = 56657675,
		LEVEL_57 = 67988790,
		LEVEL_58 = 81586128,
		LEVEL_59 = 97902933,
		LEVEL_60 = 117483099,
		LEVEL_61 = 140979298,
		LEVEL_62 = 169174736,
		LEVEL_63 = 203009261,
		LEVEL_64 = 243610691,
		LEVEL_65 = 292332407,
		LEVEL_66 = 350798466,
		LEVEL_67 = 420957736,
		LEVEL_68 = 505148860,
		LEVEL_69 = 606178208,
		LEVEL_70 = 727413425,
		LEVEL_71 = 872895685,
		LEVEL_72 = 1047474397,
		LEVEL_73 = 1256968851,
		LEVEL_74 = 1508362195,
		LEVEL_88 = 1810034207,
		LEVEL_100 = 2073739175,
		LEVEL_108 = 2099639276,
		LEVEL_868 = 2144641867,
		LEVEL_3732 = 2146553679,
		LEVEL_5920 = 2146673313,
		LEVEL_6424 = 2147293156,
		LEVEL_MAX = 2147400657
	};
}

namespace NH3Objects
{
	enum eObjects
	{
		NO_OBJ = -1,
		ALTAR_OF_SACRIFICE = 2,
		ANCHOR_POINT,
		ARENA,
		ARTIFACT,
		PANDORAS_BOX,
		BLACK_MARKET,
		BOAT,
		BORDERGUARD,
		KEYMASTER,
		BUOY,
		CAMPFIRE,
		CARTOGRAPHER,
		SWAN_POND,
		COVER_OF_DARKNESS,
		CREATURE_BANK,
		CREATURE_GENERATOR1,
		CREATURE_GENERATOR2,
		CREATURE_GENERATOR3,
		CREATURE_GENERATOR4,
		CURSED_GROUND,
		CORPSE,
		MARLETTO_TOWER,
		DERELICT_SHIP,
		DRAGON_UTOPIA,
		EVENT,
		EYE_OF_MAGI,
		FAERIE_RING,
		FLOTSAM,
		FOUNTAIN_OF_FORTUNE,
		FOUNTAIN_OF_YOUTH,
		GARDEN_OF_REVELATION,
		GARRISON,
		HERO,
		HILL_FORT,
		GRAIL,
		HUT_OF_MAGI,
		IDOL_OF_FORTUNE,
		LEAN_TO,
		DECORATIVE,
		LIBRARY_OF_ENLIGHTENMENT,
		LIGHTHOUSE,
		MONOLITH_ONE_WAY_ENTRANCE,
		MONOLITH_ONE_WAY_EXIT,
		MONOLITH_TWO_WAY,
		MAGIC_PLAINS1,
		SCHOOL_OF_MAGIC,
		MAGIC_SPRING,
		MAGIC_WELL,
		MARKET_OF_TIME,
		MERCENARY_CAMP,
		MERMAID,
		MINE,
		MONSTER,
		MYSTICAL_GARDEN,
		OASIS,
		OBELISK,
		REDWOOD_OBSERVATORY,
		OCEAN_BOTTLE,
		PILLAR_OF_FIRE,
		STAR_AXIS,
		PRISON,
		PYRAMID,
		RALLY_FLAG,
		RANDOM_ART,
		RANDOM_TREASURE_ART,
		RANDOM_MINOR_ART,
		RANDOM_MAJOR_ART,
		RANDOM_RELIC_ART,
		RANDOM_HERO,
		RANDOM_MONSTER,
		RANDOM_MONSTER_L1,
		RANDOM_MONSTER_L2,
		RANDOM_MONSTER_L3,
		RANDOM_MONSTER_L4,
		RANDOM_RESOURCE,
		RANDOM_TOWN,
		REFUGEE_CAMP,
		RESOURCE,
		SANCTUARY,
		SCHOLAR,
		SEA_CHEST,
		SEER_HUT,
		CRYPT,
		SHIPWRECK,
		SHIPWRECK_SURVIVOR,
		SHIPYARD,
		SHRINE_OF_MAGIC_INCANTATION,
		SHRINE_OF_MAGIC_GESTURE,
		SHRINE_OF_MAGIC_THOUGHT,
		SIGN,
		SIRENS,
		SPELL_SCROLL,
		STABLES,
		TAVERN,
		TEMPLE,
		DEN_OF_THIEVES,
		TOWN,
		TRADING_POST,
		LEARNING_STONE,
		TREASURE_CHEST,
		TREE_OF_KNOWLEDGE,
		SUBTERRANEAN_GATE,
		UNIVERSITY,
		WAGON,
		WAR_MACHINE_FACTORY,
		SCHOOL_OF_WAR,
		WARRIORS_TOMB,
		WATER_WHEEL,
		WATERING_HOLE,
		WHIRLPOOL,
		WINDMILL,
		WITCH_HUT,
		BRUSH,
		BUSH,
		CACTUS,
		CANYON,
		CRATER,
		DEAD_VEGETATION,
		FLOWERS,
		FROZEN_LAKE,
		HEDGE,
		HILL,
		HOLE,
		KELP,
		LAKE,
		LAVA_FLOW,
		LAVA_LAKE,
		MUSHROOMS,
		LOG,
		MANDRAKE,
		MOSS,
		MOUND,
		MOUNTAIN,
		OAK_TREES,
		OUTCROPPING,
		PINE_TREES,
		PLANT,
		BLANK1,
		BLANK2,
		BLANK3,
		BLANK4,
		RIVER_DELTA,
		BLANK5,
		BLANK6,
		BLANK7,
		ROCK,
		SAND_DUNE,
		SAND_PIT,
		SHRUB,
		SKULL,
		STALAGMITE,
		STUMP,
		TAR_PIT,
		TREES,
		VINE,
		VOLCANIC_TENT,
		VOLCANO,
		WILLOW_TREES,
		YUCCA_TREES,
		REEF,
		RANDOM_MONSTER_L5,
		RANDOM_MONSTER_L6,
		RANDOM_MONSTER_L7,
		BRUSH2,
		BUSH2,
		CACTUS2,
		CANYON2,
		CRATER2,
		DEAD_VEGETATION2,
		FLOWERS2,
		FROZEN_LAKE2,
		HEDGE2,
		HILL2,
		HOLE2,
		KELP2,
		LAKE2,
		LAVA_FLOW2,
		LAVA_LAKE2,
		MUSHROOMS2,
		LOG2,
		MANDRAKE2,
		MOSS2,
		MOUND2,
		MOUNTAIN2,
		OAK_TREES2,
		OUTCROPPING2,
		PINE_TREES2,
		PLANT2,
		RIVER_DELTA2,
		ROCK2,
		SAND_DUNE2,
		SAND_PIT2,
		SHRUB2,
		SKULL2,
		STALAGMITE2,
		STUMP2,
		TAR_PIT2,
		TREES2,
		VINE2,
		VOLCANIC_TENT2,
		VOLCANO2,
		WILLOW_TREES2,
		YUCCA_TREES2,
		REEF2,
		DESERT_HILLS,
		DIRT_HILLS,
		GRASS_HILLS,
		ROUGH_HILLS,
		SUBTERRANEAN_ROCKS,
		SWAMP_FOLIAGE,
		BORDER_GATE,
		FREELANCERS_GUILD,
		HERO_PLACEHOLDER,
		QUEST_GUARD,
		RANDOM_DWELLING,
		RANDOM_DWELLING_LVL,
		RANDOM_DWELLING_FACTION,
		GARRISON2,
		ABANDONED_MINE,
		TRADING_POST_SNOW,
		CLOVER_FIELD,
		CURSED_GROUND2,
		EVIL_FOG,
		FAVORABLE_WINDS,
		FIERY_FIELDS,
		HOLY_GROUNDS,
		LUCID_POOLS,
		MAGIC_CLOUDS,
		MAGIC_PLAINS2,
		ROCKLANDS
	};
}

namespace NH3PlayerColors
{
	enum ePlayerColors
	{
		RED,
		BLUE,
		TAN,
		GREEN,
		ORANGE,
		PURPLE,
		TEAL,
		PINK
	};
}

namespace NH3Resources
{
	enum eResources
	{
		WOOD,
		MERCURY,
		ORE,
		SULFUR,
		CRYSTAL,
		GEMS,
		GOLD
	};
}

namespace NH3Skills
{
	enum ePrimary
	{
		ATTACK,
		DEFENSE,
		SPELL_POWER,
		KNOWLEDGE
	};

	enum eSecondary
	{
		PATHFINDING,
		ARCHERY,
		LOGISTICS,
		SCOUTING,
		DIPLOMACY,
		NAVIGATION,
		LEADERSHIP,
		WISDOM,
		MYSTICISM,
		LUCK,
		BALLISTICS,
		EAGLE_EYE,
		NECROMANCY,
		ESTATES,
		FIRE_MAGIC,
		AIR_MAGIC,
		WATER_MAGIC,
		EARTH_MAGIC,
		SCHOLAR,
		TACTICS,
		ARTILLERY,
		LEARNING,
		OFFENSE,
		ARMORER,
		INTELLIGENCE,
		SORCERY,
		RESISTANCE,
		FIRST_AID
	};
}

namespace NH3Terrains
{
	enum eTerrain
	{
		DIRT,
		SAND,
		GRASS,
		SNOW,
		SWAMP,
		ROUGH,
		SUBTERRANEAN,
		LAVA,
		WATER,
		ROCK
	};
}

namespace NH3VKey
{
	enum eH3VKey
	{
		H3VK_ESCAPE = 1,
		H3VK_1,
		H3VK_2,
		H3VK_3,
		H3VK_4,
		H3VK_5,
		H3VK_6,
		H3VK_7,
		H3VK_8,
		H3VK_9,
		H3VK_0,
		H3VK_MINUS,
		H3VK_PLUS,
		H3VK_BACKSPACE,
		H3VK_TAB,
		H3VK_Q,
		H3VK_W,
		H3VK_E,
		H3VK_R,
		H3VK_T,
		H3VK_Y,
		H3VK_U,
		H3VK_I,
		H3VK_O,
		H3VK_P,
		H3VK_LEFT_BRACKET,
		H3VK_RIGHT_BRACKET,
		H3VK_ENTER,
		H3VK_CTRL,
		H3VK_A,
		H3VK_S,
		H3VK_D,
		H3VK_F,
		H3VK_G,
		H3VK_H,
		H3VK_J,
		H3VK_K,
		H3VK_L,
		H3VK_SEMICOLON,
		H3VK_APOSTROPHE,
		H3VK_TILDE,
		H3VK_SHIFT,
		H3VK_BACKSLASH,
		H3VK_Z,
		H3VK_X,
		H3VK_C,
		H3VK_V,
		H3VK_B,
		H3VK_N,
		H3VK_M,
		H3VK_COMMA,
		H3VK_PERIOD,
		H3VK_SLASH,
		H3VK_RIGHT_SHIFT,
		H3VK_PRINTSCREEN, // or * on numpad?

		H3VK_SPACEBAR = 0x39,

		H3VK_F2 = 0X3C,
		H3VK_F3,
		H3VK_F4,
		H3VK_F5,
		H3VK_F6,
		H3VK_F7,
		H3VK_F8,
		H3VK_F9,
		H3VK_F10,
		H3VK_PAUSE,
		H3VK_SCROLL_LOCK,
		H3VK_HOME,
		H3VK_UP,
		H3VK_PAGE_UP,
		H3VK_NUMPAD_MINUS,
		H3VK_LEFT,
		H3VK_NUMPAD5,
		H3VK_RIGHT,
		H3VK_NUMPAD_PLUS,
		H3VK_END,
		H3VK_DOWN,
		H3VK_PAGE_DOWN,
		H3VK_INSERT,
		H3VK_DELETE,

		H3VK_F11 = 0x57,
		H3VK_F12,

		H3VK_LEFT_WIN = 0x5B,
		H3VK_RIGHT_WIN,
		H3VK_RIGHT_CLICK
	};
}

#pragma warning(pop)

#endif /* #define _H3CONSTANTS_H_ */